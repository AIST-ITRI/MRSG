import re
import os.path

APPNAME = 'MRSG'
VERSION = '1.0.0'

top = '.'
out = 'build'

def options(ctx):
    ctx.add_option('--search-path', action='store', default='', help='Search paths')
    ctx.load('compiler_cxx')

def configure(ctx):
    search_paths = []
    if len(ctx.options.search_path) > 0:
        search_paths = ctx.options.search_path.split(':')
        ctx.env.append_value('INCLUDES', [ s + '/include' for s in search_paths])
        ctx.env.append_value('LIBPATH', [ s + '/lib'     for s in search_paths])

    ctx.load('compiler_cxx')
    ctx.check_cxx(lib = 'm')

    # SimGrid
    ctx.check_cxx(lib = 'simgrid')
    ctx.check_cxx(header_name = 'msg/msg.h')

    # MRSG
    ctx.check_cxx(lib = 'mrsg', use='M SIMGRID')
    ctx.check_cxx(header_name = 'mrsg.h')

    ctx.env.USE= 'MRSG SIMGRID M'

def build(ctx):
    sources = ctx.path.ant_glob('*.cpp')
    for s in sources:
        tgt = re.sub(r'\.cpp$', r'.bin', str(s))
        ctx.program(
            target=tgt,
            source=[s],
            use=ctx.env.USE)
